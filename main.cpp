/*********************************************************************
 * Name:      	main.cpp
 * Purpose:   	Implements simple wxWidgets application with GUI
 * 				created using wxFormBuilder.
 * Author:    
 * Created:   
 * Copyright: 
 * License:   	wxWidgets license (www.wxwidgets.org)
 * 
 * Notes:		Note that all GUI creation code is implemented in
 * 				gui.cpp source file which is generated by wxFormBuilder.
 *********************************************************************/

#include "main.h"
#include <stdlib.h>

// initialize the application
IMPLEMENT_APP(MainApp);

////////////////////////////////////////////////////////////////////////////////
// application class implementation 
////////////////////////////////////////////////////////////////////////////////

bool MainApp::OnInit()
{
	SetTopWindow( new MainFrame( NULL ) );
	GetTopWindow()->Show();
	
	// true = enter the main loop
	return true;
}

////////////////////////////////////////////////////////////////////////////////
// main application frame implementation 
////////////////////////////////////////////////////////////////////////////////

MainFrame::MainFrame(wxWindow *parent) : MainFrameBase( parent )
{
}

MainFrame::~MainFrame()
{
}

void MainFrame::OnCloseFrame(wxCloseEvent& event)
{
	Destroy();
}

void MainFrame::OnExitClick(wxCommandEvent& event)
{
	Destroy();
}



double MainFrame::gcd( double a, double b )
{
	
	if( 0 == a )
		return b;
	
	while( b != 0 )
		if( a > b )
			a -= b;
		else
			b -= a;
	
	return a;
	
}


void MainFrame::OnCalculate( wxCommandEvent& event ) 
{ 

	wxString wA,wB,wC,temp = _("");
	double a,b,c,d,e,f,g,h,m,r,w;
	bool calculatable = false;
	
	m_Work->ClearAll();
	//m_Work->InsertItem(0,_("test"));
	
	//return;
	
	wA = m_textCtrlA->GetValue();
	wA.ToDouble(&a);
	wB = m_textCtrlB->GetValue();
	wB.ToDouble(&b);
	wC = m_textCtrlC->GetValue();
	wC.ToDouble(&c);

	d = a+c;
	f = 0;
	e = 0;
	g = 0;
	
	while( abs(e) < abs(d) )
	{
		if( b < 0 )
			e--;
		else
			e++;
			
		f=b-e;
		
		if( e*f == d )
		{
			h = gcd(abs(a),abs(e));
			m = gcd(abs(c),abs(f));
			r = gcd(abs(a),abs(f));
			w = gcd(abs(c),abs(e));
			
			if( a < 0 ) h = -1 * h;
			if( f < 0 ) m = -1 * m;
			if( e < 0 ) w = -1 * w;
			
			if( a < 0 && b < 0 && c < 0 )
			{
				h = -1 * h;
				m = -1 * m;
			}
			
			if( h == r && m == w )
			{
				temp = _("");
				temp << _("(") << h << _("x + ") << m << _(")^2");
				m_Work->InsertItem(m_Work->GetItemCount(), temp );
			} 
			else
			{
				g = gcd(gcd(gcd(abs(h),abs(m)),abs(r)),abs(w));
				temp = _("");
				temp << _("(") << h << _("X + ") << m << _(")(") << r << _("X + ") << w << _(")=0");
				m_Work->InsertItem(m_Work->GetItemCount(), temp );
				
				if( g > 1 )
				{
					temp = _("");	
					temp << g << _("(") << (h/g) << _("X + ") << (m/g) << _(")(") << (r/g) << _("X + ") << (w/g) << _(")=0");
					m_Work->InsertItem(m_Work->GetItemCount(), temp );
				}
			}
			
			temp = _("");
			temp << _("X=") << (-1*m)/h << _(", X=") << (-1*w)/r;
			m_Work->InsertItem(m_Work->GetItemCount(), temp );
			
			calculatable = true;
			
			break;
				
		}
	}
	
	if( !calculatable )
		wxMessageBox( _("Could not calculate") );

	
}

